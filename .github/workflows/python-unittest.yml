

name: UPAC

on:
  push:
    branches: 
      - main
      - dev
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:

    runs-on: ${{ matrix.os }}
    name: Test UPAC on ${{ matrix.os }} and Irace from ${{ matrix.r-package-source }}
    env: 
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04]
        python-version: ["3.8"]
        pip-args: ["--upgrade"]
        r-version: ["release"]
        r-package-source: ["github::MLopez-Ibanez/irace"]

    steps:

    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: pip

    - name: Set up R 
      uses: r-lib/actions/setup-r@v2
      with:
        r-version: ${{ matrix.r-version }}
        use-public-rspm: true

    - uses: r-lib/actions/setup-r-dependencies@v2
      if: ${{ matrix.r-package-source == 'github::MLopez-Ibanez/irace' }}
      with:
        packages: remotes
        pak-version: devel

    - name: Install github::MLopez-Ibanez/irace
      if: ${{ matrix.r-package-source == 'github::MLopez-Ibanez/irace' }}
      run: |
        remotes::install_github('MLopez-Ibanez/irace', upgrade = 'never', build = FALSE)
      shell: Rscript {0}

    - uses: r-lib/actions/setup-r-dependencies@v2
      if: ${{ matrix.r-package-source == 'cran::irace' }}
      with:
        packages: ${{ matrix.r-package-source }}
        dependencies: '"hard"'
        pak-version: devel

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Test with unittest
      run: |
        python -m unittest tests/unittests.py
        python -m unittest tests/test_irace_enhsp.py
